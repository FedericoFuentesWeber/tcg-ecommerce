paths:
  /api/products/:
    get:
      summary: Obtiene todos los productos
      tags:
        - Products
      responses:
        "200":
          description: "Se obtuvieron los productos de la base de datos."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product'
        "500":
          description: "Error interno del servidor, no fue posible obtener los productos"
  /api/products/{pid}:
    get:
      summary: "Se obtiene un solo producto a partir de su Id"
      tags:
        - Products
      parameters:
      - name: pid
        in: path
        required: true
        description: "Id del producto que se desea solicitar"
        schema:
          $type: String
      responses:
        "200":
          description: "Producto encontrado"
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Product'
    put:
      summary: "Actualiza el producto a partir de su Id"
      tags:
        - Products
      parameters:
      - name: pid
        in: path
        required: true
        description: "Id del producto que se desea solicitar"
        schema:
          $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateProduct'


components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: "Id autogenerado de mongo"
        title:
          type: String
          description: "Nombre del producto"
        description:
          type: String
          description: "Descripción del producto"
        price:
          type: Number
          description: "Precio del producto"
        code:
          type: String
          description: "Código identificatorio del producto"
        stock:
          type: Number
          description: "Número de stock del producto"
        status:
          type: Boolean
          description: "Estado del producto"
        category:
          type: String
          description: "Categoria del producto"
        thumbnails:
          type: Array
          description: "Imagenes del producto"
      example:
        _id: ObjetId('66207bf320000b22c651bf88')
        title: "Elemento X"
        description: "Elemento utilizado para crear a las chicas super poderosas"
        price: 1000000
        code: "1234"
        stock: 1
        status: true
        category: "Producto quimico"
        thumbnails: []
  requestBodies:
    updateProduct:
      type: object
      properties:
        title:
          type: String
          description: "Nombre del producto"
        description:
          type: String
          description: "Descripción del producto"
        price:
          type: Number
          description: "Precio del producto"
        code:
          type: String
          description: "Código identificatorio del producto"
        stock:
          type: Number
          description: "Número de stock del producto"
        status:
          type: Boolean
          description: "Estado del producto"
        category:
          type: String
          description: "Categoria del producto"
        thumbnails:
          type: Array
          description: "Imagenes del producto"
      example:
        title: "Elemento X"
        description: "Elemento utilizado para crear a las chicas super poderosas"
        price: 1000000
        code: "1234"
        stock: 5
        status: true
        category: "Producto quimico"
        thumbnails: []